/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import main.Conectar;
import manejadores.manejadorBienes;
import manejadores.manejadorTarjetas;
import manejadores.manejadorTarjetasAux;
import manejadores.manejadorUsuario;
import modelos.Bien;
import modelos.Tarjeta;
import modelos.TarjetaAux;
import modelos.Usuario;

/**
 *
 * @author ricardo
 */
public class bienesForm extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel();
    private manejadorBienes manejadorBien;
    private manejadorTarjetas manejadorTarjetas;
    private manejadorTarjetasAux manejadorAux;
    private Bien bien;
    private Tarjeta tarjeta;
    private TarjetaAux tarjetaAux;
    
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modeloEncargado = new DefaultTableModel();
    DefaultTableModel modeloEncargadoAux = new DefaultTableModel();
    public bienesForm() {
        this.manejadorBien = new manejadorBienes();
        this.manejadorTarjetas = new manejadorTarjetas();
        this.manejadorAux = new manejadorTarjetasAux();
        this.bien = new Bien();
        this.tarjeta = new Tarjeta();
        this.tarjetaAux = new TarjetaAux();
        this.setContentPane(fondo);
        initComponents();
        cargarDatosBien();
        componentesVisibleFalse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new FondoPanel();
        panelBienes = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        limpiarButton = new javax.swing.JButton();
        actualizarButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        costoText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGerente = new javax.swing.JTable();
        tarjetasButton = new javax.swing.JButton();
        UALabel = new javax.swing.JLabel();
        CUAText = new javax.swing.JLabel();
        CUAComboBox = new javax.swing.JComboBox<>();
        estadoComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        adquisicionComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEncargadoAux = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableEncargado = new javax.swing.JTable();
        panelTarjetas = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        auxiliarLabel = new javax.swing.JLabel();
        encargadoLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        codigoLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        divisionText = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        moduloText = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        fechaImpresionLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        crearButton = new javax.swing.JButton();
        salonText = new javax.swing.JTextField();
        estadoTarjetaBox = new javax.swing.JComboBox<>();
        validacionLabel = new javax.swing.JLabel();
        busquedaEncargadoLabel = new javax.swing.JLabel();
        busquedaAuxLabel = new javax.swing.JLabel();
        busquedaEncargadoComboBox = new javax.swing.JComboBox<>();
        busquedaAuxComboBox = new javax.swing.JComboBox<>();
        busquedaEncargadoText = new javax.swing.JTextField();
        busquedaAuxText = new javax.swing.JTextField();
        filtroEncargadoComboBox = new javax.swing.JComboBox<>();
        filtroAuxComboBox = new javax.swing.JComboBox<>();
        buscarEncargadoButton = new javax.swing.JButton();
        buscarAuxButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        cuentaComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AREA DE BIENES");
        setResizable(false);

        panelBienes.setFocusable(false);
        panelBienes.setOpaque(false);

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Nombre:  *");

        nombreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Unidad Academica: *");

        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("Codigo Bien: *");

        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setText("Estado: *");

        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        actualizarButton.setText("Actualizar Datos");
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(254, 254, 254));
        jLabel7.setText("Costo: *");

        jLabel9.setForeground(new java.awt.Color(254, 254, 254));
        jLabel9.setText("Crear Tarjetas : *");

        jLabel10.setForeground(new java.awt.Color(254, 254, 254));
        jLabel10.setText("(Principal y Aux)");

        costoText.setEnabled(false);
        costoText.setOpaque(false);

        tableGerente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Profesion", "Usuario", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGerente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGerenteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableGerente);

        tarjetasButton.setText("CREAR TARJETAS");
        tarjetasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarjetasButtonActionPerformed(evt);
            }
        });

        UALabel.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 16)); // NOI18N
        UALabel.setText("12");
        UALabel.setEnabled(false);
        UALabel.setFocusable(false);

        CUAText.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 16)); // NOI18N
        CUAText.setText("12");
        CUAText.setEnabled(false);
        CUAText.setFocusable(false);

        CUAComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));

        estadoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVO", "INACTIVO" }));
        estadoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("Tipo Adquisicion:*");

        adquisicionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Traslado", "Compra", "Donacion" }));
        adquisicionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adquisicionComboBoxActionPerformed(evt);
            }
        });

        tableEncargadoAux.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Profesion", "Usuario", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEncargadoAux.setOpaque(false);
        tableEncargadoAux.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEncargadoAuxMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableEncargadoAux);

        tableEncargado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Profesion", "Usuario", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEncargado.setOpaque(false);
        tableEncargado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEncargadoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableEncargado);

        panelTarjetas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        panelTarjetas.setFocusable(false);
        panelTarjetas.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(254, 254, 254));
        jLabel6.setText("Creacion de Tarjetas de un Bien");

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(254, 254, 254));
        jLabel11.setText("Encargado:");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(254, 254, 254));
        jLabel12.setText("Encargado Aux: ");

        auxiliarLabel.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        auxiliarLabel.setForeground(new java.awt.Color(254, 254, 254));

        encargadoLabel.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        encargadoLabel.setForeground(new java.awt.Color(254, 254, 254));

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(254, 254, 254));
        jLabel15.setText("Codigo Tarjeta:");

        codigoLabel.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        codigoLabel.setForeground(new java.awt.Color(254, 254, 254));

        jLabel13.setForeground(new java.awt.Color(254, 254, 254));
        jLabel13.setText("Division:");

        divisionText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingenieria", "Salud", "Economicas", "Humanidades", "Ciencia y Tecnologia", "Juridicas", "Arquitectura", "Odontologia", "Fin de Semana", "Administracion" }));

        jLabel14.setForeground(new java.awt.Color(254, 254, 254));
        jLabel14.setText("Modulo:");

        moduloText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "E", "H", "90", "Administracion" }));
        moduloText.setToolTipText("");

        jLabel16.setForeground(new java.awt.Color(254, 254, 254));
        jLabel16.setText("Salon:");

        jLabel17.setForeground(new java.awt.Color(254, 254, 254));
        jLabel17.setText("Fecha Impresion:");

        fechaImpresionLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        fechaImpresionLabel.setForeground(new java.awt.Color(254, 254, 254));

        jLabel18.setForeground(new java.awt.Color(254, 254, 254));
        jLabel18.setText("Estado Tarjeta:");

        crearButton.setText("Crear");
        crearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearButtonActionPerformed(evt);
            }
        });

        estadoTarjetaBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        validacionLabel.setForeground(new java.awt.Color(255, 0, 0));
        validacionLabel.setText("Todos los campos marcados con * son requeridos.");

        javax.swing.GroupLayout panelTarjetasLayout = new javax.swing.GroupLayout(panelTarjetas);
        panelTarjetas.setLayout(panelTarjetasLayout);
        panelTarjetasLayout.setHorizontalGroup(
            panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTarjetasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(66, 66, 66))
            .addGroup(panelTarjetasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(validacionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelTarjetasLayout.createSequentialGroup()
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTarjetasLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(encargadoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(auxiliarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(divisionText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(codigoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(moduloText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salonText)))
                    .addGroup(panelTarjetasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaImpresionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadoTarjetaBox, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelTarjetasLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(crearButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTarjetasLayout.setVerticalGroup(
            panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTarjetasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(encargadoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(auxiliarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(codigoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(divisionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(moduloText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(salonText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(fechaImpresionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTarjetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(estadoTarjetaBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validacionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(crearButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        busquedaEncargadoLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        busquedaEncargadoLabel.setText("Busqueda por:");

        busquedaAuxLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        busquedaAuxLabel.setText("Busqueda por:");

        busquedaEncargadoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido", "DPI", "Usuario", "Division", "Profesion" }));
        busquedaEncargadoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaEncargadoComboBoxActionPerformed(evt);
            }
        });

        busquedaAuxComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido", "DPI", "Usuario", "Division", "Profesion" }));
        busquedaAuxComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaAuxComboBoxActionPerformed(evt);
            }
        });

        busquedaEncargadoText.setEnabled(false);

        busquedaAuxText.setEnabled(false);

        filtroEncargadoComboBox.setEnabled(false);

        filtroAuxComboBox.setEnabled(false);

        buscarEncargadoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        buscarEncargadoButton.setBorder(null);
        buscarEncargadoButton.setBorderPainted(false);
        buscarEncargadoButton.setContentAreaFilled(false);
        buscarEncargadoButton.setFocusPainted(false);
        buscarEncargadoButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/searchPressed.png"))); // NOI18N
        buscarEncargadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarEncargadoButtonActionPerformed(evt);
            }
        });

        buscarAuxButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        buscarAuxButton.setBorder(null);
        buscarAuxButton.setBorderPainted(false);
        buscarAuxButton.setContentAreaFilled(false);
        buscarAuxButton.setFocusPainted(false);
        buscarAuxButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/searchPressed.png"))); // NOI18N
        buscarAuxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarAuxButtonActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(254, 254, 254));
        jLabel19.setText("Cuenta:*");

        cuentaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mercancia", "Terrenos", "Edificios", "Mobiliario y Equipo", "Maquinaria", "Papeleria y Utiles", "Publicidad", " " }));
        cuentaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuentaComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBienesLayout = new javax.swing.GroupLayout(panelBienes);
        panelBienes.setLayout(panelBienesLayout);
        panelBienesLayout.setHorizontalGroup(
            panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBienesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBienesLayout.createSequentialGroup()
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBienesLayout.createSequentialGroup()
                                .addComponent(CUAText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(CUAComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tarjetasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(nombreText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(adquisicionComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(estadoComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(costoText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cuentaComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panelTarjetas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelBienesLayout.createSequentialGroup()
                            .addComponent(actualizarButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(limpiarButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBienesLayout.createSequentialGroup()
                        .addComponent(busquedaEncargadoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaEncargadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaEncargadoText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filtroEncargadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscarEncargadoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBienesLayout.createSequentialGroup()
                        .addComponent(busquedaAuxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaAuxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaAuxText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filtroAuxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarAuxButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelBienesLayout.setVerticalGroup(
            panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBienesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBienesLayout.createSequentialGroup()
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(UALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(CUAText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CUAComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adquisicionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(estadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(costoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cuentaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tarjetasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBienesLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBienesLayout.createSequentialGroup()
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(busquedaEncargadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(busquedaEncargadoText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filtroEncargadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(busquedaEncargadoLabel)
                            .addComponent(buscarEncargadoButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(busquedaAuxLabel)
                            .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(busquedaAuxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(busquedaAuxText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filtroAuxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buscarAuxButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(panelBienesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actualizarButton)
                            .addComponent(limpiarButton))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBienesLayout.createSequentialGroup()
                        .addComponent(panelTarjetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelBienes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelBienes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextActionPerformed

    private void crearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearButtonActionPerformed
        if (adquisicionComboBox.getSelectedIndex()==0 || adquisicionComboBox.getSelectedIndex()==2) {
            if (nombreText.getText().isEmpty() || salonText.getText().isEmpty()) {
                this.validacionLabel.setVisible(true);
            }else{
                String nombre=nombreText.getText();
                nombre=nombre.replaceAll(" ", "");
                
                String salon=salonText.getText();
                salon=salon.replaceAll(" ", "");

                if(nombre.length()==0 ){
                    JOptionPane.showMessageDialog(null, "No se acepta un nombre vacio en el campo NOMBRE");
                }else if (salon.length()==0) {
                    JOptionPane.showMessageDialog(null, "No se acepta un salon vacio en el campo SALON");
                }else{
                                        
                    java.util.Date dateIngreso = (java.util.Date) manejadorTarjetas.getDate();
                    long di = dateIngreso.getTime();
                    java.sql.Date fechaImpresion = new java.sql.Date(di);
                    tarjeta.setDPI(encargadoLabel.getText());
                    tarjeta.setCodigoCorrelativo(codigoLabel.getText());
                    tarjeta.setDivision(divisionText.getSelectedItem().toString());
                    tarjeta.setModulo(moduloText.getSelectedItem().toString());
                    tarjeta.setSalon(salonText.getText());
                    tarjeta.setFechaImpresion(fechaImpresion);
                    tarjeta.setEstado(estadoTarjetaBox.getSelectedItem().toString());
                    
                    tarjetaAux.setDPI(auxiliarLabel.getText());
                    tarjetaAux.setCodigoCorrelativo(codigoLabel.getText());
                    tarjetaAux.setDivision(divisionText.getSelectedItem().toString());
                    tarjetaAux.setModulo(moduloText.getSelectedItem().toString());
                    tarjetaAux.setSalon(salonText.getText());
                    tarjetaAux.setFechaImpresion(fechaImpresion);
                    tarjetaAux.setEstado(estadoTarjetaBox.getSelectedItem().toString());
                    
                    String UA = CUAText.getText()+CUAComboBox.getSelectedItem().toString();
                    bien.setNombre(nombreText.getText());
                    bien.setUnidadAcademica(UALabel.getText());
                    bien.setCodigoTipoBien(UA);
                    bien.setAdquision(adquisicionComboBox.getSelectedItem().toString());
                    bien.setCosto(0.00);
                    bien.setEstado(estadoComboBox.getSelectedItem().toString());
                    bien.setCuenta(cuentaComboBox.getSelectedItem().toString());
                    bien.setTarjeta(codigoLabel.getText());
                    bien.setTarjetaAux(codigoLabel.getText());

                    try {
                        if (manejadorTarjetas.registrarTarjeta(tarjeta)
                            && manejadorAux.registrarTarjetaAux(tarjetaAux)
                            && manejadorBien.registrarBien(bien, modelo)) {
                            JOptionPane.showMessageDialog(null, "BIEN Y TARJETAS DE RESPONSABILIDAD CREADAS");
                            limpiar();
                        }else{
                            JOptionPane.showMessageDialog(null, "ERROR AL CREAR TARJETAS DE RESPONSABILIDAD");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(bienesForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        }else{
            if (nombreText.getText().isEmpty() || salonText.getText().isEmpty() || costoText.getText().isEmpty()) {
                this.validacionLabel.setVisible(true);
            }else{
                String nombre=nombreText.getText();
                nombre=nombre.replaceAll(" ", "");
                
                String salon=salonText.getText();
                salon=salon.replaceAll(" ", "");
                
                String costo=salonText.getText();
                costo=costo.replaceAll(" ", "");

                if(nombre.length()==0 ){
                    JOptionPane.showMessageDialog(null, "No se acepta un nombre vacio en el campo NOMBRE");
                }else if (salon.length()==0) {
                    JOptionPane.showMessageDialog(null, "No se acepta un salon vacio en el campo SALON");
                }else if (costo.length()==0) {
                    JOptionPane.showMessageDialog(null, "No se acepta un costo vacio en el campo COSTO");
                }else{
                                        
                    java.util.Date dateIngreso = (java.util.Date) manejadorTarjetas.getDate();
                    long di = dateIngreso.getTime();
                    java.sql.Date fechaImpresion = new java.sql.Date(di);
                    tarjeta.setDPI(encargadoLabel.getText());
                    tarjeta.setCodigoCorrelativo(codigoLabel.getText());
                    tarjeta.setDivision(divisionText.getSelectedItem().toString());
                    tarjeta.setModulo(moduloText.getSelectedItem().toString());
                    tarjeta.setSalon(salonText.getText());
                    tarjeta.setFechaImpresion(fechaImpresion);
                    tarjeta.setEstado(estadoTarjetaBox.getSelectedItem().toString());
                    
                    tarjetaAux.setDPI(auxiliarLabel.getText());
                    tarjetaAux.setCodigoCorrelativo(codigoLabel.getText());
                    tarjetaAux.setDivision(divisionText.getSelectedItem().toString());
                    tarjetaAux.setModulo(moduloText.getSelectedItem().toString());
                    tarjetaAux.setSalon(salonText.getText());
                    tarjetaAux.setFechaImpresion(fechaImpresion);
                    tarjetaAux.setEstado(estadoTarjetaBox.getSelectedItem().toString());

                    String UA = CUAText.getText()+CUAComboBox.getSelectedItem().toString();
                    double costoT = Double.parseDouble(costoText.getText());
                    bien.setNombre(nombreText.getText());
                    bien.setUnidadAcademica(UALabel.getText());
                    bien.setCodigoTipoBien(UA);
                    bien.setAdquision(adquisicionComboBox.getSelectedItem().toString());
                    bien.setCosto(costoT);
                    bien.setEstado(estadoComboBox.getSelectedItem().toString());
                    bien.setCuenta(cuentaComboBox.getSelectedItem().toString());
                    bien.setTarjeta(codigoLabel.getText());
                    bien.setTarjetaAux(codigoLabel.getText());

                    try {
                        if (manejadorTarjetas.registrarTarjeta(tarjeta)
                            && manejadorAux.registrarTarjetaAux(tarjetaAux)
                            && manejadorBien.registrarBien(bien, modelo)) {
                            JOptionPane.showMessageDialog(null, "BIEN Y TARJETAS DE RESPONSABILIDAD CREADAS");
                            limpiar();
                        }else{
                            JOptionPane.showMessageDialog(null, "ERROR AL CREAR TARJETAS DE RESPONSABILIDAD");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(bienesForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        }
        
        
    }//GEN-LAST:event_crearButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        limpiar();
        crearButton.setEnabled(true);
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
        cargarDatosEncargados();
        cargarDatosEncargadosAux();
        cargarDatosBien();
        crearButton.setEnabled(true);
        limpiarButton.setEnabled(true);
    }//GEN-LAST:event_actualizarButtonActionPerformed

    private void tarjetasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarjetasButtonActionPerformed
        codigoLabel.setText(manejadorTarjetas.codigoTarjeta());
        fechaImpresionLabel.setText(manejadorTarjetas.getDate().toString());
        componentesVisibleTrue();     
    }//GEN-LAST:event_tarjetasButtonActionPerformed

    private void tableEncargadoAuxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEncargadoAuxMouseClicked
       manejadorAux.busquedaTarjetaAux(tableEncargadoAux, auxiliarLabel);
    }//GEN-LAST:event_tableEncargadoAuxMouseClicked

    private void tableEncargadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEncargadoMouseClicked
        manejadorTarjetas.busquedaTarjeta(tableEncargado, encargadoLabel);
    }//GEN-LAST:event_tableEncargadoMouseClicked

    private void estadoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoComboBoxActionPerformed
        
    }//GEN-LAST:event_estadoComboBoxActionPerformed

    private void adquisicionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adquisicionComboBoxActionPerformed
         if (adquisicionComboBox.getSelectedIndex()==1) {
            costoText.setEnabled(true);
            costoText.setOpaque(true);
        }else if (adquisicionComboBox.getSelectedIndex()==0 || adquisicionComboBox.getSelectedIndex()==2) {
            costoText.setEnabled(false);
            costoText.setOpaque(false);
        }
    }//GEN-LAST:event_adquisicionComboBoxActionPerformed

    private void busquedaEncargadoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaEncargadoComboBoxActionPerformed
        switch (busquedaEncargadoComboBox.getSelectedIndex()) {
            case 0:
            busquedaEncargadoText.setEnabled(true);
            filtroEncargadoComboBox.setEnabled(false);
            break;
            case 1:
            busquedaEncargadoText.setEnabled(true);
            filtroEncargadoComboBox.setEnabled(false);
            break;
            case 2:
            busquedaEncargadoText.setEnabled(true);
            filtroEncargadoComboBox.setEnabled(false);
            break;
            case 3:
            busquedaEncargadoText.setEnabled(true);
            filtroEncargadoComboBox.setEnabled(false);
            break;
            case 4:
            busquedaEncargadoText.setEnabled(false);
            filtroEncargadoComboBox.setEnabled(true);
            filtroEncargadoComboBox.removeAllItems();
            filtroEncargadoComboBox.addItem("Ingenieria");
            filtroEncargadoComboBox.addItem("Salud");
            filtroEncargadoComboBox.addItem("Economicas");
            filtroEncargadoComboBox.addItem("Humanidades");
            filtroEncargadoComboBox.addItem("Ciencia y Tecnologia");
            filtroEncargadoComboBox.addItem("Juridicas");
            filtroEncargadoComboBox.addItem("Arquitectura");
            filtroEncargadoComboBox.addItem("Odontologia");
            filtroEncargadoComboBox.addItem("Fin de Semana");
            filtroEncargadoComboBox.addItem("Administracion");
            break;
            case 5:
            busquedaEncargadoText.setEnabled(true);
            filtroEncargadoComboBox.setEnabled(false);
            break;

            default:
            break;
        }
    }//GEN-LAST:event_busquedaEncargadoComboBoxActionPerformed

    private void busquedaAuxComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaAuxComboBoxActionPerformed
        switch (busquedaAuxComboBox.getSelectedIndex()) {
            case 0:
            busquedaAuxText.setEnabled(true);
            filtroAuxComboBox.setEnabled(false);
            break;
            case 1:
            busquedaAuxText.setEnabled(true);
            filtroAuxComboBox.setEnabled(false);
            break;
            case 2:
            busquedaAuxText.setEnabled(true);
            filtroAuxComboBox.setEnabled(false);
            break;
            case 3:
            busquedaAuxText.setEnabled(true);
            filtroAuxComboBox.setEnabled(false);
            break;
            case 4:
            busquedaAuxText.setEnabled(false);
            filtroAuxComboBox.setEnabled(true);
            filtroAuxComboBox.removeAllItems();
            filtroAuxComboBox.addItem("Ingenieria");
            filtroAuxComboBox.addItem("Salud");
            filtroAuxComboBox.addItem("Economicas");
            filtroAuxComboBox.addItem("Humanidades");
            filtroAuxComboBox.addItem("Ciencia y Tecnologia");
            filtroAuxComboBox.addItem("Juridicas");
            filtroAuxComboBox.addItem("Arquitectura");
            filtroAuxComboBox.addItem("Odontologia");
            filtroAuxComboBox.addItem("Fin de Semana");
            filtroAuxComboBox.addItem("Administracion");
            break;
            case 5:
            busquedaAuxText.setEnabled(true);
            filtroAuxComboBox.setEnabled(false);
            break;

            default:
            break;
        }
    }//GEN-LAST:event_busquedaAuxComboBoxActionPerformed

    private void buscarEncargadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarEncargadoButtonActionPerformed
        switch (busquedaEncargadoComboBox.getSelectedIndex()) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 5:
            manejadorTarjetas.filtraciones(tableEncargado, modeloEncargado, busquedaEncargadoComboBox.getSelectedItem().toString(), busquedaEncargadoText.getText());
            busquedaEncargadoText.setText("");
            busquedaEncargadoText.setEnabled(true);
            break;
            case 4:
            manejadorTarjetas.filtraciones(tableEncargado, modeloEncargado, busquedaEncargadoComboBox.getSelectedItem().toString(), filtroEncargadoComboBox.getSelectedItem().toString());
            break;
        }

    }//GEN-LAST:event_buscarEncargadoButtonActionPerformed

    private void buscarAuxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarAuxButtonActionPerformed
        switch (busquedaAuxComboBox.getSelectedIndex()) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 5:
            manejadorAux.filtraciones(tableEncargadoAux, modeloEncargadoAux, busquedaAuxComboBox.getSelectedItem().toString(), busquedaAuxText.getText());
            busquedaAuxText.setText("");
            busquedaAuxText.setEnabled(true);
            break;
            case 4:
            manejadorAux.filtraciones(tableEncargadoAux, modeloEncargadoAux, busquedaAuxComboBox.getSelectedItem().toString(), filtroAuxComboBox.getSelectedItem().toString());
            break;
        }

    }//GEN-LAST:event_buscarAuxButtonActionPerformed

    private void tableGerenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGerenteMouseClicked

    }//GEN-LAST:event_tableGerenteMouseClicked

    private void cuentaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuentaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaComboBoxActionPerformed
    
    private void cargarDatosBien(){
    try{
            modelo = new DefaultTableModel();
            tableGerente.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conectar conn = new Conectar();
            Connection con = conn.conectarDB();
            
            String sql = "SELECT * FROM Bien";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
        
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Nombre");
            modelo.addColumn("Unidad Academica");
            modelo.addColumn("Codigo Bien");
            modelo.addColumn("Adquisicion");
            modelo.addColumn("Costo");
            modelo.addColumn("Estado");
            modelo.addColumn("Cuenta");
            modelo.addColumn("Tarjeta R");
            modelo.addColumn("Tarjeta RA");
                while(rs.next()){
                    Object[] filas  = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            filas[i] = rs.getObject(i + 1);
                        }
                    modelo.addRow(filas);
                }
        }catch(SQLException e){
            
        }
    }   
    private void cargarDatosEncargados(){
    try{
            modeloEncargado = new DefaultTableModel();
            tableEncargado.setModel(modeloEncargado);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conectar conn = new Conectar();
            Connection con = conn.conectarDB();
            
            String sql = "SELECT * FROM Usuario WHERE TipoUsuario=1";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
        
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modeloEncargado.addColumn("Nombre");
            modeloEncargado.addColumn("Apellido");
            modeloEncargado.addColumn("DPI");
            modeloEncargado.addColumn("Fecha Nacimiento");
            modeloEncargado.addColumn("Cargo");
            modeloEncargado.addColumn("Profesion");
            modeloEncargado.addColumn("Division");
            modeloEncargado.addColumn("Modulo");
            modeloEncargado.addColumn("Tipo");
            modeloEncargado.addColumn("Usuario");
            modeloEncargado.addColumn("Password");
                while(rs.next()){
                    Object[] filas  = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            filas[i] = rs.getObject(i + 1);
                        }
                    modeloEncargado.addRow(filas);
                }
        }catch(SQLException e){
            
        }
    }   
    private void cargarDatosEncargadosAux(){
    try{
            modeloEncargadoAux = new DefaultTableModel();
            tableEncargadoAux.setModel(modeloEncargadoAux);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conectar conn = new Conectar();
            Connection con = conn.conectarDB();
            
            String sql = "SELECT * FROM Usuario WHERE TipoUsuario=2";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
        
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modeloEncargadoAux.addColumn("Nombre");
            modeloEncargadoAux.addColumn("Apellido");
            modeloEncargadoAux.addColumn("DPI");
            modeloEncargadoAux.addColumn("Fecha Nacimiento");
            modeloEncargadoAux.addColumn("Cargo");
            modeloEncargadoAux.addColumn("Profesion");
            modeloEncargadoAux.addColumn("Division");
            modeloEncargadoAux.addColumn("Modulo");
            modeloEncargadoAux.addColumn("Tipo");
            modeloEncargadoAux.addColumn("Usuario");
            modeloEncargadoAux.addColumn("Password");
                while(rs.next()){
                    Object[] filas  = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            filas[i] = rs.getObject(i + 1);
                        }
                    modeloEncargadoAux.addRow(filas);
                }
        }catch(SQLException e){
            
        }
    }
    public void limpiar(){
        nombreText.setText(null);
        CUAComboBox.setSelectedItem("A");
        adquisicionComboBox.setSelectedItem("Traslado");
        estadoComboBox.setSelectedItem("ACTIVO");
        costoText.setText(null);

        panelTarjetas.setVisible(false);
        tableEncargado.setVisible(false);
        tableEncargadoAux.setVisible(false);
                //componentes para busqueda de un encargado
        busquedaEncargadoComboBox.setVisible(false);
        busquedaEncargadoText.setVisible(false);
        filtroEncargadoComboBox.setVisible(false);
        buscarEncargadoButton.setVisible(false);
        busquedaEncargadoLabel.setVisible(false);
        //componentes para busqueda de un encargado auxiliar
        busquedaAuxComboBox.setVisible(false);
        busquedaAuxText.setVisible(false);
        filtroAuxComboBox.setVisible(false);
        buscarAuxButton.setVisible(false);
        busquedaAuxLabel.setVisible(false);
               
    }
    public void setVisible(boolean flag) {
		this.validacionLabel.setVisible(false);
		super.setVisible(flag);
	}
    private void componentesVisibleFalse(){
        //componente para las tarjetas de un bien
        panelTarjetas.setVisible(false);
         tableEncargado.setVisible(false);
        tableEncargadoAux.setVisible(false);
        //componentes para busqueda de un encargado
        busquedaEncargadoComboBox.setVisible(false);
        busquedaEncargadoText.setVisible(false);
        filtroEncargadoComboBox.setVisible(false);
        buscarEncargadoButton.setVisible(false);
        busquedaEncargadoLabel.setVisible(false);
        //componentes para busqueda de un encargado auxiliar
        busquedaAuxComboBox.setVisible(false);
        busquedaAuxText.setVisible(false);
        filtroAuxComboBox.setVisible(false);
        buscarAuxButton.setVisible(false);
        busquedaAuxLabel.setVisible(false);
       }
    private void componentesVisibleTrue(){
        //componente para las tarjetas de un bien
        panelTarjetas.setVisible(true);  
         tableEncargado.setVisible(true);
        tableEncargadoAux.setVisible(true);
        //componentes para busqueda de un encargado
        busquedaEncargadoComboBox.setVisible(true);
        busquedaEncargadoText.setVisible(true);
        filtroEncargadoComboBox.setVisible(true);
        buscarEncargadoButton.setVisible(true);
        busquedaEncargadoLabel.setVisible(true);
        //componentes para busqueda de un encargado auxiliar
        busquedaAuxComboBox.setVisible(true);
        busquedaAuxText.setVisible(true);
        filtroAuxComboBox.setVisible(true);
        buscarAuxButton.setVisible(true);
        busquedaAuxLabel.setVisible(true);
        //carga de datos de los encargados y encargados auxiliares
        cargarDatosEncargados();
        cargarDatosEncargadosAux();
    }
    
    
    
    class FondoPanel extends JPanel{
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/Images/fondoGeneral.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CUAComboBox;
    private javax.swing.JLabel CUAText;
    private javax.swing.JLabel UALabel;
    private javax.swing.JButton actualizarButton;
    private javax.swing.JComboBox<String> adquisicionComboBox;
    private javax.swing.JLabel auxiliarLabel;
    private javax.swing.JButton buscarAuxButton;
    private javax.swing.JButton buscarEncargadoButton;
    private javax.swing.JComboBox<String> busquedaAuxComboBox;
    private javax.swing.JLabel busquedaAuxLabel;
    private javax.swing.JTextField busquedaAuxText;
    private javax.swing.JComboBox<String> busquedaEncargadoComboBox;
    private javax.swing.JLabel busquedaEncargadoLabel;
    private javax.swing.JTextField busquedaEncargadoText;
    private javax.swing.JLabel codigoLabel;
    private javax.swing.JTextField costoText;
    private javax.swing.JButton crearButton;
    private javax.swing.JComboBox<String> cuentaComboBox;
    private javax.swing.JComboBox<String> divisionText;
    private javax.swing.JLabel encargadoLabel;
    private javax.swing.JComboBox<String> estadoComboBox;
    private javax.swing.JComboBox<String> estadoTarjetaBox;
    private javax.swing.JLabel fechaImpresionLabel;
    private javax.swing.JComboBox<String> filtroAuxComboBox;
    private javax.swing.JComboBox<String> filtroEncargadoComboBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton limpiarButton;
    private javax.swing.JComboBox<String> moduloText;
    private javax.swing.JTextField nombreText;
    private javax.swing.JPanel panelBienes;
    private javax.swing.JPanel panelTarjetas;
    private javax.swing.JTextField salonText;
    private javax.swing.JTable tableEncargado;
    private javax.swing.JTable tableEncargadoAux;
    private javax.swing.JTable tableGerente;
    private javax.swing.JButton tarjetasButton;
    private javax.swing.JLabel validacionLabel;
    // End of variables declaration//GEN-END:variables
}
