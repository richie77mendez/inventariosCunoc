/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import main.Conectar;
import manejadores.manejadorUsuario;
import modelos.Usuario;

/**
 *
 * @author ricardo
 */
public class usuarioForm extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel();
    private manejadorUsuario manejadorUsuario;
    private Usuario gerente;
    DefaultTableModel modelo = new DefaultTableModel();
    public usuarioForm() {
        this.manejadorUsuario = new manejadorUsuario();
        this.gerente = new Usuario();
        this.setContentPane(fondo);
        initComponents();
        cargarDatos();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apellidoText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dpiText = new javax.swing.JTextField();
        usuarioText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        passText = new javax.swing.JTextField();
        crearButton = new javax.swing.JButton();
        modificarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();
        validacionLabel = new javax.swing.JLabel();
        actualizarButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        usuarioBusqueda = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        divisionText = new javax.swing.JComboBox<>();
        moduloText = new javax.swing.JComboBox<>();
        tipoUsuarioText = new javax.swing.JComboBox<>();
        cargoText = new javax.swing.JTextField();
        profesionText = new javax.swing.JTextField();
        nacimientoText = new rojeru_san.componentes.RSDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGerente = new javax.swing.JTable();
        buscarButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        busquedaComboBox = new javax.swing.JComboBox<>();
        busquedaText = new javax.swing.JTextField();
        filtroComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Area de Usuarios");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setFocusable(false);
        jPanel1.setOpaque(false);

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Nombre:  *");

        nombreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Apellido:  *");

        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("DPI:");

        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setText("Cargo: *");

        jLabel6.setForeground(new java.awt.Color(254, 254, 254));
        jLabel6.setText("Password: *");

        crearButton.setText("Crear");
        crearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearButtonActionPerformed(evt);
            }
        });

        modificarButton.setText("Modificar");
        modificarButton.setEnabled(false);
        modificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.setEnabled(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        validacionLabel.setForeground(new java.awt.Color(255, 0, 0));
        validacionLabel.setText("Todos los campos marcados con * son requeridos.");

        actualizarButton.setText("Actualizar Datos");
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(254, 254, 254));
        jLabel7.setText("Fecha Nacimiento: ");

        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("Usuario: *");

        jLabel9.setForeground(new java.awt.Color(254, 254, 254));
        jLabel9.setText("Profesion: *");

        usuarioBusqueda.setEnabled(false);

        jLabel10.setForeground(new java.awt.Color(254, 254, 254));
        jLabel10.setText("Division:");

        jLabel11.setForeground(new java.awt.Color(254, 254, 254));
        jLabel11.setText("Modulo Trabajo:");

        jLabel12.setForeground(new java.awt.Color(254, 254, 254));
        jLabel12.setText("Tipo Usuario:");

        divisionText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingenieria", "Salud", "Economicas", "Humanidades", "Ciencia y Tecnologia", "Juridicas", "Arquitectura", "Odontologia", "Fin de Semana", "Administracion" }));

        moduloText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "E", "H", "90", "Administracion" }));
        moduloText.setToolTipText("");

        tipoUsuarioText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Encargado", "Encargado Aux" }));
        tipoUsuarioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoUsuarioTextActionPerformed(evt);
            }
        });

        nacimientoText.setColorBackground(new java.awt.Color(1, 1, 1));
        nacimientoText.setColorForeground(new java.awt.Color(1, 1, 1));
        nacimientoText.setPlaceholder("Fecha");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(validacionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nacimientoText, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(apellidoText)
                                    .addComponent(dpiText)
                                    .addComponent(usuarioText)
                                    .addComponent(passText)
                                    .addComponent(divisionText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(moduloText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tipoUsuarioText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cargoText)
                                    .addComponent(profesionText)
                                    .addComponent(nombreText))
                                .addGap(46, 46, 46)
                                .addComponent(usuarioBusqueda))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(actualizarButton)
                                .addGap(18, 18, 18)
                                .addComponent(limpiarButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(crearButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modificarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usuarioBusqueda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apellidoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dpiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(nacimientoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cargoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(profesionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(divisionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(moduloText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addComponent(tipoUsuarioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(usuarioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(validacionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crearButton)
                    .addComponent(modificarButton)
                    .addComponent(eliminarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(limpiarButton)
                    .addComponent(actualizarButton))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 570));

        tableGerente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Profesion", "Usuario", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGerente.setOpaque(false);
        tableGerente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGerenteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableGerente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 890, 410));

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        buscarButton.setBorder(null);
        buscarButton.setBorderPainted(false);
        buscarButton.setContentAreaFilled(false);
        buscarButton.setFocusPainted(false);
        buscarButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/searchPressed.png"))); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(buscarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 20, 60, -1));

        jLabel13.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel13.setText("NOTA: Explicacion del campo Tipo");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 510, 240, -1));

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel14.setText("Gerente = 0         Encargado Bien = 1        Encargado Bien Auxiliar = 2       ");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 530, -1, -1));

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel16.setText("Busqueda por:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        busquedaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido", "DPI", "TipoUsuario", "Usuario", "Division", "Profesion" }));
        busquedaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(busquedaComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 28, 170, 40));

        busquedaText.setEnabled(false);
        getContentPane().add(busquedaText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 28, 140, 40));

        filtroComboBox.setEnabled(false);
        getContentPane().add(filtroComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, 160, 40));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearButtonActionPerformed
        if (nombreText.getText().isEmpty() || apellidoText.getText().isEmpty() ||
            dpiText.getText().isEmpty() ||  
            cargoText.getText().isEmpty() || profesionText.getText().isEmpty() || 
            divisionText.getSelectedItem().toString().isEmpty() || 
            moduloText.getSelectedItem().toString().isEmpty() || 
            tipoUsuarioText.getSelectedItem().toString().isEmpty() ||
            usuarioText.getText().isEmpty() ||passText.getText().isEmpty()        
            ) {
            this.validacionLabel.setVisible(true);

        }else{
            String nombre=nombreText.getText();
            nombre=nombre.replaceAll(" ", "");

            String apellido=apellidoText.getText();
            apellido=apellido.replaceAll(" ", "");
            
            String dpi=dpiText.getText();
            dpi=dpi.replaceAll(" ", "");
            
            String cargo=cargoText.getText();
            cargo=cargo.replaceAll(" ", "");

            String profesion=profesionText.getText();
            profesion=profesion.replaceAll(" ", "");

            String usuario=usuarioText.getText();
            usuario=usuario.replaceAll(" ", "");

            String pass=passText.getText();
            pass=pass.replaceAll(" ", "");

            if(nombre.length()==0 ){
                JOptionPane.showMessageDialog(null, "No se acepta un nombre vacio en el campo NOMBRE");
            }else if (apellido.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un apellido vacio en el campo APELLIDO");
            }else if (dpi.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un DPI vacia en el campo DPI");
            }else if (cargo.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un cargo vacio en el campo CARGO");
            }else if (profesion.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta una profesion vacia en el campo PROFESION");
            }else if (usuario.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un usuario vacio en el campo USUARIO");
            }else if (pass.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un password vacio en el campo PASSWORD");
            }else{
                 java.util.Date dateIngreso = (java.util.Date) nacimientoText.getDatoFecha();
                 long di = dateIngreso.getTime();
                 java.sql.Date fechaIngreso = new java.sql.Date(di);
                gerente.setNombre(nombreText.getText());
                gerente.setApellido(apellidoText.getText());
                gerente.setDPI(dpiText.getText());
                gerente.setFechaNacimiento(fechaIngreso);
                gerente.setCargo(cargoText.getText());
                gerente.setProfesion(profesionText.getText());
                gerente.setDivision(divisionText.getSelectedItem().toString());
                gerente.setModuloTrabajo(moduloText.getSelectedItem().toString());
                gerente.setTipoUsuario(tipoUsuarioText.getSelectedIndex());
                gerente.setUsuario(usuarioText.getText());
                gerente.setPassword(passText.getText());

                try {
                    if (manejadorUsuario.registrarGerente(gerente, modelo, nombreText, apellidoText, dpiText, nacimientoText.getDatoFecha(),
                            cargoText,profesionText,divisionText,moduloText,tipoUsuarioText, usuarioText, passText) == true) {
                        limpiar();
                    }else{
                        JOptionPane.showMessageDialog(null, "ERROR AL CREAR USUARIO");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(usuarioForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

    }//GEN-LAST:event_crearButtonActionPerformed

    private void modificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarButtonActionPerformed
        if (nombreText.getText().isEmpty() || apellidoText.getText().isEmpty() ||
            dpiText.getText().isEmpty() ||  
            cargoText.getText().isEmpty() || profesionText.getText().isEmpty() || 
            divisionText.getSelectedItem().toString().isEmpty() || 
            moduloText.getSelectedItem().toString().isEmpty() || 
            tipoUsuarioText.getSelectedItem().toString().isEmpty() ||
            usuarioText.getText().isEmpty() ||passText.getText().isEmpty()        
            ) {
            this.validacionLabel.setVisible(true);

        }else{
            String nombre=nombreText.getText();
            nombre=nombre.replaceAll(" ", "");

            String apellido=apellidoText.getText();
            apellido=apellido.replaceAll(" ", "");
            
            String dpi=dpiText.getText();
            dpi=dpi.replaceAll(" ", "");
            
            String cargo=cargoText.getText();
            cargo=cargo.replaceAll(" ", "");

            String profesion=profesionText.getText();
            profesion=profesion.replaceAll(" ", "");

            String usuario=usuarioText.getText();
            usuario=usuario.replaceAll(" ", "");

            String pass=passText.getText();
            pass=pass.replaceAll(" ", "");

            if(nombre.length()==0 ){
                JOptionPane.showMessageDialog(null, "No se acepta un nombre vacio en el campo NOMBRE");
            }else if (apellido.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un apellido vacio en el campo APELLIDO");
            }else if (dpi.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un DPI vacia en el campo DPI");
            }else if (cargo.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un cargo vacio en el campo CARGO");
            }else if (profesion.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta una profesion vacia en el campo PROFESION");
            }else if (usuario.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un usuario vacio en el campo USUARIO");
            }else if (pass.length()==0) {
                JOptionPane.showMessageDialog(null, "No se acepta un password vacio en el campo PASSWORD");
            } else{
                java.util.Date dateIngreso = (java.util.Date) nacimientoText.getDatoFecha();
                    long di = dateIngreso.getTime();
                    java.sql.Date fechaIngreso = new java.sql.Date(di);
                try {
                    if (manejadorUsuario.modificarGerente(nombreText.getText(), apellidoText.getText(),dpiText.getText(),
                            fechaIngreso ,cargoText.getText(),profesionText.getText(),divisionText.getSelectedItem().toString(),
                            moduloText.getSelectedItem().toString(),tipoUsuarioText.getSelectedIndex() ,passText.getText(),usuarioText.getText(), usuarioBusqueda.getText()) == true) {
                        limpiar();
                        limpiarButton.setEnabled(false);
                    }else{
                        JOptionPane.showMessageDialog(null, "ERROR AL MODIFICAR");
                    }   } catch (SQLException ex) {
                    Logger.getLogger(usuarioForm.class.getName()).log(Level.SEVERE, null, ex);
                }
        }

        }
    }//GEN-LAST:event_modificarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        try {
            manejadorUsuario.eliminarGerente(tableGerente, modelo);
        } catch (SQLException ex) {
            Logger.getLogger(usuarioForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        crearButton.setEnabled(true);
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        limpiar();
        crearButton.setEnabled(true);
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
        cargarDatos();
        crearButton.setEnabled(true);
        limpiarButton.setEnabled(true);
    }//GEN-LAST:event_actualizarButtonActionPerformed

    private void tableGerenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGerenteMouseClicked
        manejadorUsuario.busquedaGerente(tableGerente, nombreText, apellidoText, dpiText,nacimientoText.getDatoFecha(),
        cargoText,profesionText,divisionText,moduloText,tipoUsuarioText, usuarioText, passText, usuarioBusqueda);
        crearButton.setEnabled(false);
        eliminarButton.setEnabled(true);
        modificarButton.setEnabled(true);

    }//GEN-LAST:event_tableGerenteMouseClicked

    private void nombreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextActionPerformed

    private void tipoUsuarioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoUsuarioTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoUsuarioTextActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        switch (busquedaComboBox.getSelectedIndex()) {
            case 0:
            case 1:
            case 2:
            case 4:
            case 6:
                manejadorUsuario.filtraciones(tableGerente, modelo, busquedaComboBox.getSelectedItem().toString(), busquedaText.getText());
                busquedaText.setText("");
                busquedaText.setEnabled(true);
                break;
            case 5:
                manejadorUsuario.filtraciones(tableGerente, modelo, busquedaComboBox.getSelectedItem().toString(), filtroComboBox.getSelectedItem().toString());
                break;
            default:
                manejadorUsuario.filtraciones(tableGerente, modelo, busquedaComboBox.getSelectedItem().toString(), filtroComboBox.getSelectedIndex());
                break;
        }
 

    }//GEN-LAST:event_buscarButtonActionPerformed

    private void busquedaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaComboBoxActionPerformed
        switch (busquedaComboBox.getSelectedIndex()) {
            case 0:
                busquedaText.setEnabled(true);
                filtroComboBox.setEnabled(false);
                break;
            case 1:
                busquedaText.setEnabled(true);
                filtroComboBox.setEnabled(false);
                break;
            case 2:
                busquedaText.setEnabled(true);
                filtroComboBox.setEnabled(false);
                break;
            case 3:
                busquedaText.setEnabled(false);
                filtroComboBox.setEnabled(true);
                filtroComboBox.removeAllItems();
                filtroComboBox.addItem("Gerente");
                filtroComboBox.addItem("Encargado");
                filtroComboBox.addItem("Encargado Aux");
                break;
            case 4:
                busquedaText.setEnabled(true);
                filtroComboBox.setEnabled(false);
                break;  
            case 5:
                busquedaText.setEnabled(false);
                filtroComboBox.setEnabled(true);
                filtroComboBox.removeAllItems();
                filtroComboBox.addItem("Ingenieria");
                filtroComboBox.addItem("Salud");
                filtroComboBox.addItem("Economicas");
                filtroComboBox.addItem("Humanidades");
                filtroComboBox.addItem("Ciencia y Tecnologia");
                filtroComboBox.addItem("Juridicas");
                filtroComboBox.addItem("Arquitectura");
                filtroComboBox.addItem("Odontologia");
                filtroComboBox.addItem("Fin de Semana");
                filtroComboBox.addItem("Administracion");
                break;
            case 6:
                busquedaText.setEnabled(true);
                filtroComboBox.setEnabled(false);
                break;    
                
            default:
                break;
        }
    }//GEN-LAST:event_busquedaComboBoxActionPerformed

     private void cargarDatos(){
    try{
            modelo = new DefaultTableModel();
            tableGerente.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conectar conn = new Conectar();
            Connection con = conn.conectarDB();
            
            String sql = "SELECT * FROM Usuario";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
        
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("DPI");
            modelo.addColumn("Fecha Nacimiento");
            modelo.addColumn("Cargo");
            modelo.addColumn("Profesion");
            modelo.addColumn("Division");
            modelo.addColumn("Modulo");
            modelo.addColumn("Tipo");
            modelo.addColumn("Usuario");
            modelo.addColumn("Password");
                while(rs.next()){
                    Object[] filas  = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            filas[i] = rs.getObject(i + 1);
                        }
                    modelo.addRow(filas);
                }
        }catch(SQLException e){
            
        }
    }
     
     public void limpiar(){
        eliminarButton.setEnabled(false);
        modificarButton.setEnabled(false);
        nombreText.setText(null);
        apellidoText.setText(null);
        dpiText.setText(null);
        nacimientoText.setDatoFecha(null);
        cargoText.setText(null);
        profesionText.setText(null);
        divisionText.setSelectedItem("Ingenieria");
        moduloText.setSelectedItem("G");
        tipoUsuarioText.setSelectedItem("Gerente");
        usuarioText.setText(null);
        passText.setText(null);
    }
    public void setVisible(boolean flag) {
		this.validacionLabel.setVisible(false);
		super.setVisible(flag);
	}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarButton;
    private javax.swing.JTextField apellidoText;
    private javax.swing.JButton buscarButton;
    private javax.swing.JComboBox<String> busquedaComboBox;
    private javax.swing.JTextField busquedaText;
    private javax.swing.JTextField cargoText;
    private javax.swing.JButton crearButton;
    private javax.swing.JComboBox<String> divisionText;
    private javax.swing.JTextField dpiText;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JComboBox<String> filtroComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiarButton;
    private javax.swing.JButton modificarButton;
    private javax.swing.JComboBox<String> moduloText;
    private rojeru_san.componentes.RSDateChooser nacimientoText;
    private javax.swing.JTextField nombreText;
    private javax.swing.JTextField passText;
    private javax.swing.JTextField profesionText;
    private javax.swing.JTable tableGerente;
    private javax.swing.JComboBox<String> tipoUsuarioText;
    private javax.swing.JLabel usuarioBusqueda;
    private javax.swing.JTextField usuarioText;
    private javax.swing.JLabel validacionLabel;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel{
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/Images/fondoGeneral.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
